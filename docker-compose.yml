version: "3.8"

services:

  redis_pubsub:
    container_name: redis_pubsub
    build:
      context: .
      dockerfile: Dockerfile
    image: allocation-image
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
      mailhog:
        condition: service_started
    environment:
      - DB_HOST=postgres
      - DB_PASSWORD=abc123
      - REDIS_HOST=redis
      - EMAIL_HOST=mailhog
      - PYTHONDONTWRITEBYTECODE=1
    volumes:
      - ./src:/src
      - ./tests:/tests
    entrypoint:
      - python
      - /src/allocation/entrypoints/redis_eventconsumer.py

  fastapi:
    container_name: fastapi
    image: allocation-image
    depends_on:
      redis_pubsub:
        condition: service_started
      mailhog:
        condition: service_started
      postgres:
        condition: service_healthy
    environment:
      - DB_HOST=postgres
      - DB_PASSWORD=abc123
      - API_HOST=fastapi
      - REDIS_HOST=redis
      - EMAIL_HOST=mailhog
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
    volumes:
      - ./src:/src
      - ./tests:/tests
    entrypoint:
      - uvicorn
      - allocation.entrypoints.main:app
      - --reload
      - --host=0.0.0.0
      - --port=8000
    ports:
      - "8001:8000"

  postgres:
    container_name: postgres
    image: postgres:16
    environment:
      - POSTGRES_USER=allocation
      - POSTGRES_PASSWORD=abc123
    ports:
      - "54321:5432"
    tmpfs:
      - /var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    container_name: redis
    image: redis:7.2.3-alpine
    ports:
      - "63791:6379"

  mailhog:
    container_name: mailhog
    image: mailhog/mailhog
    ports:
      - "11025:1025"
      - "18025:8025"
